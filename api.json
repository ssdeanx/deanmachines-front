{"openapi":"3.1.0","info":{"title":"Mastra API","description":"Mastra API","version":"1.0.0"},"paths":{"/api":{"get":{"responses":{"200":{"description":"Success"}},"operationId":"getApi","tags":["system"],"parameters":[],"description":"Get API status"}},"/api/agents":{"get":{"responses":{"200":{"description":"List of all agents"}},"operationId":"getApiAgents","tags":["agents"],"parameters":[],"description":"Get all available agents"}},"/api/networks":{"get":{"responses":{"200":{"description":"List of all networks"}},"operationId":"getApiNetworks","tags":["networks"],"parameters":[],"description":"Get all available networks"}},"/api/networks/{networkId}":{"get":{"responses":{"200":{"description":"Network details"},"404":{"description":"Network not found"}},"operationId":"getApiNetworksByNetworkId","tags":["networks"],"parameters":[{"name":"networkId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get network by ID"}},"/api/networks/{networkId}/generate":{"post":{"responses":{"200":{"description":"Generated response"},"404":{"description":"Network not found"}},"operationId":"postApiNetworksByNetworkIdGenerate","tags":["networks"],"parameters":[{"name":"networkId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Generate a response from a network","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"object"}}],"description":"Input for the network, can be a string or an array of CoreMessage objects"}},"required":["input"]}}}}}},"/api/networks/{networkId}/stream":{"post":{"responses":{"200":{"description":"Generated response"},"404":{"description":"Network not found"}},"operationId":"postApiNetworksByNetworkIdStream","tags":["networks"],"parameters":[{"name":"networkId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Generate a response from a network","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"object"}}],"description":"Input for the network, can be a string or an array of CoreMessage objects"}},"required":["input"]}}}}}},"/api/agents/{agentId}":{"get":{"responses":{"200":{"description":"Agent details"},"404":{"description":"Agent not found"}},"operationId":"getApiAgentsByAgentId","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get agent by ID"}},"/api/agents/{agentId}/evals/ci":{"get":{"responses":{"200":{"description":"List of evals"}},"operationId":"getApiAgentsByAgentIdEvalsCi","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get CI evals by agent ID"}},"/api/agents/{agentId}/evals/live":{"get":{"responses":{"200":{"description":"List of evals"}},"operationId":"getApiAgentsByAgentIdEvalsLive","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get live evals by agent ID"}},"/api/agents/{agentId}/generate":{"post":{"responses":{"200":{"description":"Generated response"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdGenerate","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Generate a response from an agent","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object"}},"threadId":{"type":"string"},"resourceId":{"type":"string","description":"The resource ID for the conversation"},"resourceid":{"type":"string","description":"The resource ID for the conversation (deprecated, use resourceId instead)","deprecated":true},"runId":{"type":"string"},"output":{"type":"object"}},"required":["messages"]}}}}}},"/api/agents/{agentId}/stream":{"post":{"responses":{"200":{"description":"Streamed response"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdStream","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Stream a response from an agent","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object"}},"threadId":{"type":"string"},"resourceId":{"type":"string","description":"The resource ID for the conversation"},"resourceid":{"type":"string","description":"The resource ID for the conversation (deprecated, use resourceId instead)","deprecated":true},"runId":{"type":"string"},"output":{"type":"object"}},"required":["messages"]}}}}}},"/api/agents/{agentId}/instructions":{"post":{"responses":{"200":{"description":"Instructions updated successfully"},"403":{"description":"Not allowed in non-playground environment"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdInstructions","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Update an agent's instructions","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"instructions":{"type":"string","description":"New instructions for the agent"}},"required":["instructions"]}}}}}},"/api/agents/{agentId}/instructions/enhance":{"post":{"responses":{"200":{"description":"Generated system prompt and analysis","content":{"application/json":{"schema":{"type":"object","properties":{"explanation":{"type":"string","description":"Detailed analysis of the instructions"},"new_prompt":{"type":"string","description":"The enhanced system prompt"}}}}}},"400":{"description":"Missing or invalid request parameters"},"404":{"description":"Agent not found"},"500":{"description":"Internal server error or model response parsing error"}},"operationId":"postApiAgentsByAgentIdInstructionsEnhance","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"},"description":"ID of the agent whose model will be used for prompt generation"}],"description":"Generate an improved system prompt from instructions","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"instructions":{"type":"string","description":"Instructions to generate a system prompt from"},"comment":{"type":"string","description":"Optional comment for the enhanced prompt"}},"required":["instructions"]}}}}}},"/api/agents/{agentId}/speakers":{"get":{"responses":{"200":{"description":"List of available speakers","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","description":"Speaker information depending on the voice provider","properties":{"voiceId":{"type":"string"}},"additionalProperties":true}}}}},"400":{"description":"Agent does not have voice capabilities"},"404":{"description":"Agent not found"}},"operationId":"getApiAgentsByAgentIdSpeakers","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"[DEPRECATED] Use /api/agents/:agentId/voice/speakers instead. Get available speakers for an agent"}},"/api/agents/{agentId}/voice/speakers":{"get":{"responses":{"200":{"description":"List of available speakers","content":{"application/json":{"schema":{"type":"array","items":{"type":"object","description":"Speaker information depending on the voice provider","properties":{"voiceId":{"type":"string"}},"additionalProperties":true}}}}},"400":{"description":"Agent does not have voice capabilities"},"404":{"description":"Agent not found"}},"operationId":"getApiAgentsByAgentIdVoiceSpeakers","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get available speakers for an agent"}},"/api/agents/{agentId}/speak":{"post":{"responses":{"200":{"description":"Audio stream","content":{"audio/mpeg":{"schema":{"format":"binary","description":"Audio stream containing the generated speech"}},"audio/*":{"schema":{"format":"binary","description":"Audio stream depending on the provider"}}}},"400":{"description":"Agent does not have voice capabilities or invalid request"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdSpeak","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"[DEPRECATED] Use /api/agents/:agentId/voice/speak instead. Convert text to speech using the agent's voice provider","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"text":{"type":"string","description":"Text to convert to speech"},"options":{"type":"object","description":"Provider-specific options for speech generation","properties":{"speaker":{"type":"string","description":"Speaker ID to use for speech generation"}},"additionalProperties":true}},"required":["text"]}}}}}},"/api/agents/{agentId}/voice/speak":{"post":{"responses":{"200":{"description":"Audio stream","content":{"audio/mpeg":{"schema":{"format":"binary","description":"Audio stream containing the generated speech"}},"audio/*":{"schema":{"format":"binary","description":"Audio stream depending on the provider"}}}},"400":{"description":"Agent does not have voice capabilities or invalid request"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdVoiceSpeak","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Convert text to speech using the agent's voice provider","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"type":"string","description":"Text to convert to speech"},"options":{"type":"object","description":"Provider-specific options for speech generation","properties":{"speaker":{"type":"string","description":"Speaker ID to use for speech generation"},"options":{"type":"object","description":"Provider-specific options for speech generation","additionalProperties":true}},"additionalProperties":true}},"required":["text"]}}}}}},"/api/agents/{agentId}/listen":{"post":{"responses":{"200":{"description":"Transcription result","content":{"application/json":{"schema":{"type":"object","properties":{"text":{"type":"string","description":"Transcribed text"}}}}}},"400":{"description":"Agent does not have voice capabilities or invalid request"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdListen","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"[DEPRECATED] Use /api/agents/:agentId/voice/listen instead. Convert speech to text using the agent's voice provider. Additional provider-specific options can be passed as query parameters.","requestBody":{"required":true,"content":{"audio/mpeg":{"schema":{"format":"binary","description":"Audio data stream to transcribe (supports various formats depending on provider like mp3, wav, webm, flac)"}}}}}},"/api/agents/{agentId}/voice/listen":{"post":{"responses":{"200":{"description":"Transcription result","content":{"application/json":{"schema":{"type":"object","properties":{"text":{"type":"string","description":"Transcribed text"}}}}}},"400":{"description":"Agent does not have voice capabilities or invalid request"},"404":{"description":"Agent not found"}},"operationId":"postApiAgentsByAgentIdVoiceListen","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Convert speech to text using the agent's voice provider. Additional provider-specific options can be passed as query parameters.","requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"type":"object","required":["audio"],"properties":{"audio":{"type":"string","format":"binary","description":"Audio data stream to transcribe (supports various formats depending on provider like mp3, wav, webm, flac)"},"options":{"type":"object","description":"Provider-specific options for speech-to-text","additionalProperties":true}}}}}}}},"/api/agents/{agentId}/tools/{toolId}/execute":{"post":{"responses":{"200":{"description":"Tool execution result"},"404":{"description":"Tool or agent not found"}},"operationId":"postApiAgentsByAgentIdToolsByToolIdExecute","tags":["agents"],"parameters":[{"name":"agentId","in":"path","required":true,"schema":{"type":"string"}},{"name":"toolId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Execute a tool through an agent","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object"}},"required":["data"]}}}}}},"/api/memory/status":{"get":{"responses":{"200":{"description":"Memory status"}},"operationId":"getApiMemoryStatus","tags":["memory"],"parameters":[{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Get memory status"}},"/api/memory/threads":{"get":{"responses":{"200":{"description":"List of all threads"}},"operationId":"getApiMemoryThreads","tags":["memory"],"parameters":[{"name":"resourceid","in":"query","required":true,"schema":{"type":"string"}},{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Get all threads"},"post":{"responses":{"200":{"description":"Created thread"}},"operationId":"postApiMemoryThreads","tags":["memory"],"parameters":[{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Create a new thread","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string"},"metadata":{"type":"object"},"resourceid":{"type":"string"},"threadId":{"type":"string"}}}}}}}},"/api/memory/threads/{threadId}":{"get":{"responses":{"200":{"description":"Thread details"},"404":{"description":"Thread not found"}},"operationId":"getApiMemoryThreadsByThreadId","tags":["memory"],"parameters":[{"name":"threadId","in":"path","required":true,"schema":{"type":"string"}},{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Get thread by ID"},"patch":{"responses":{"200":{"description":"Updated thread"},"404":{"description":"Thread not found"}},"operationId":"patchApiMemoryThreadsByThreadId","tags":["memory"],"parameters":[{"name":"threadId","in":"path","required":true,"schema":{"type":"string"}},{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Update a thread","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}}},"delete":{"responses":{"200":{"description":"Thread deleted"},"404":{"description":"Thread not found"}},"operationId":"deleteApiMemoryThreadsByThreadId","tags":["memory"],"parameters":[{"name":"threadId","in":"path","required":true,"schema":{"type":"string"}},{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Delete a thread"}},"/api/memory/threads/{threadId}/messages":{"get":{"responses":{"200":{"description":"List of messages"}},"operationId":"getApiMemoryThreadsByThreadIdMessages","tags":["memory"],"parameters":[{"name":"threadId","in":"path","required":true,"schema":{"type":"string"}},{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Get messages for a thread"}},"/api/memory/save-messages":{"post":{"responses":{"200":{"description":"Messages saved"}},"operationId":"postApiMemorySave-messages","tags":["memory"],"parameters":[{"name":"agentId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Save messages","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"messages":{"type":"array","items":{"type":"object"}}},"required":["messages"]}}}}}},"/api/telemetry":{"get":{"responses":{"200":{"description":"List of all traces (paged)"}},"operationId":"getApiTelemetry","tags":["telemetry"],"parameters":[],"description":"Get all traces"},"post":{"responses":{"200":{"description":"Traces stored"}},"operationId":"postApiTelemetry","tags":["telemetry"],"parameters":[],"description":"Store telemetry"}},"/api/workflows":{"get":{"responses":{"200":{"description":"List of all workflows"}},"operationId":"getApiWorkflows","tags":["workflows"],"parameters":[],"description":"Get all workflows"}},"/api/workflows/{workflowId}":{"get":{"responses":{"200":{"description":"Workflow details"},"404":{"description":"Workflow not found"}},"operationId":"getApiWorkflowsByWorkflowId","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get workflow by ID"}},"/api/workflows/{workflowId}/runs":{"get":{"responses":{"200":{"description":"List of workflow runs from storage"}},"operationId":"getApiWorkflowsByWorkflowIdRuns","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get all runs for a workflow"}},"/api/workflows/{workflowId}/resume":{"post":{"responses":{},"operationId":"postApiWorkflowsByWorkflowIdResume","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Resume a suspended workflow step","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"stepId":{"type":"string"},"context":{"type":"object"}}}}}}}},"/api/workflows/{workflowId}/resumeAsync":{"post":{"responses":{},"operationId":"postApiWorkflowsByWorkflowIdResumeAsync","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":true,"schema":{"type":"string"}}],"description":"@deprecated Use /api/workflows/:workflowId/resume-async instead","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"stepId":{"type":"string"},"context":{"type":"object"}}}}}}}},"/api/workflows/{workflowId}/resume-async":{"post":{"responses":{},"operationId":"postApiWorkflowsByWorkflowIdResume-async","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Resume a suspended workflow step","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"stepId":{"type":"string"},"context":{"type":"object"}}}}}}}},"/api/workflows/{workflowId}/createRun":{"post":{"responses":{"200":{"description":"New workflow run created"}},"operationId":"postApiWorkflowsByWorkflowIdCreateRun","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":false,"schema":{"type":"string"}}],"description":"Create a new workflow run"}},"/api/workflows/{workflowId}/startAsync":{"post":{"responses":{"200":{"description":"Workflow execution result"},"404":{"description":"Workflow not found"}},"operationId":"postApiWorkflowsByWorkflowIdStartAsync","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":false,"schema":{"type":"string"}}],"description":"Execute/Start a workflow","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"type":"object"}}}}}}}},"/api/workflows/{workflowId}/start-async":{"post":{"responses":{"200":{"description":"Workflow execution result"},"404":{"description":"Workflow not found"}},"operationId":"postApiWorkflowsByWorkflowIdStart-async","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":false,"schema":{"type":"string"}}],"description":"@deprecated Use /api/workflows/:workflowId/start-async instead","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"type":"object"}}}}}}}},"/api/workflows/{workflowId}/start":{"post":{"responses":{"200":{"description":"Workflow run started"},"404":{"description":"Workflow not found"}},"operationId":"postApiWorkflowsByWorkflowIdStart","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Create and start a new workflow run","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"input":{"type":"object"}}}}}}}},"/api/workflows/{workflowId}/watch":{"get":{"responses":{"200":{"description":"Workflow transitions in real-time"}},"operationId":"getApiWorkflowsByWorkflowIdWatch","tags":["workflows"],"parameters":[{"name":"workflowId","in":"path","required":true,"schema":{"type":"string"}},{"name":"runId","in":"query","required":false,"schema":{"type":"string"}}],"description":"Watch workflow transitions in real-time"}},"/api/logs":{"get":{"responses":{"200":{"description":"List of all logs"}},"operationId":"getApiLogs","tags":["logs"],"parameters":[{"name":"transportId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Get all logs"}},"/api/logs/transports":{"get":{"responses":{"200":{"description":"List of all log transports"}},"operationId":"getApiLogsTransports","tags":["logs"],"parameters":[],"description":"List of all log transports"}},"/api/logs/{runId}":{"get":{"responses":{"200":{"description":"List of logs for run ID"}},"operationId":"getApiLogsByRunId","tags":["logs"],"parameters":[{"name":"runId","in":"path","required":true,"schema":{"type":"string"}},{"name":"transportId","in":"query","required":true,"schema":{"type":"string"}}],"description":"Get logs by run ID"}},"/api/tools":{"get":{"responses":{"200":{"description":"List of all tools"}},"operationId":"getApiTools","tags":["tools"],"parameters":[],"description":"Get all tools"}},"/api/tools/{toolId}":{"get":{"responses":{"200":{"description":"Tool details"},"404":{"description":"Tool not found"}},"operationId":"getApiToolsByToolId","tags":["tools"],"parameters":[{"name":"toolId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get tool by ID"}},"/api/tools/{toolId}/execute":{"post":{"responses":{"200":{"description":"Tool execution result"},"404":{"description":"Tool not found"}},"operationId":"postApiToolsByToolIdExecute","tags":["tools"],"parameters":[{"name":"toolId","in":"path","required":true,"schema":{"type":"string"}}],"description":"Execute a tool","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"object"}},"required":["data"]}}}}}},"/api/vector/{vectorName}/upsert":{"post":{"responses":{"200":{"description":"Vectors upserted successfully"}},"operationId":"postApiVectorByVectorNameUpsert","tags":["vector"],"parameters":[{"name":"vectorName","in":"path","required":true,"schema":{"type":"string"}}],"description":"Upsert vectors into an index","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"indexName":{"type":"string"},"vectors":{"type":"array","items":{"type":"array","items":{"type":"number"}}},"metadata":{"type":"array","items":{"type":"object"}},"ids":{"type":"array","items":{"type":"string"}}},"required":["indexName","vectors"]}}}}}},"/api/vector/{vectorName}/create-index":{"post":{"responses":{"200":{"description":"Index created successfully"}},"operationId":"postApiVectorByVectorNameCreate-index","tags":["vector"],"parameters":[{"name":"vectorName","in":"path","required":true,"schema":{"type":"string"}}],"description":"Create a new vector index","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"indexName":{"type":"string"},"dimension":{"type":"number"},"metric":{"type":"string","enum":["cosine","euclidean","dotproduct"]}},"required":["indexName","dimension"]}}}}}},"/api/vector/{vectorName}/query":{"post":{"responses":{"200":{"description":"Query results"}},"operationId":"postApiVectorByVectorNameQuery","tags":["vector"],"parameters":[{"name":"vectorName","in":"path","required":true,"schema":{"type":"string"}}],"description":"Query vectors from an index","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"indexName":{"type":"string"},"queryVector":{"type":"array","items":{"type":"number"}},"topK":{"type":"number"},"filter":{"type":"object"},"includeVector":{"type":"boolean"}},"required":["indexName","queryVector"]}}}}}},"/api/vector/{vectorName}/indexes":{"get":{"responses":{"200":{"description":"List of indexes"}},"operationId":"getApiVectorByVectorNameIndexes","tags":["vector"],"parameters":[{"name":"vectorName","in":"path","required":true,"schema":{"type":"string"}}],"description":"List all indexes for a vector store"}},"/api/vector/{vectorName}/indexes/{indexName}":{"get":{"responses":{"200":{"description":"Index details"}},"operationId":"getApiVectorByVectorNameIndexesByIndexName","tags":["vector"],"parameters":[{"name":"vectorName","in":"path","required":true,"schema":{"type":"string"}},{"name":"indexName","in":"path","required":true,"schema":{"type":"string"}}],"description":"Get details about a specific index"},"delete":{"responses":{"200":{"description":"Index deleted successfully"}},"operationId":"deleteApiVectorByVectorNameIndexesByIndexName","tags":["vector"],"parameters":[{"name":"vectorName","in":"path","required":true,"schema":{"type":"string"}},{"name":"indexName","in":"path","required":true,"schema":{"type":"string"}}],"description":"Delete a specific index"}}},"components":{"schemas":{}}}